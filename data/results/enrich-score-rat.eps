%!PS-Adobe-2.0 EPSF-2.0
%%Title: enrich-score-rat.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Jul 24 13:56:18 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 251
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (enrich-score-rat.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Tamer Kahveci,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jul 24 13:56:18 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1106 448 M
63 0 V
4381 0 R
-63 0 V
stroke
1022 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-05)]
] -46.7 MRshow
1.000 UL
LTb
1106 705 M
31 0 V
4413 0 R
-31 0 V
1106 855 M
31 0 V
4413 0 R
-31 0 V
1106 962 M
31 0 V
4413 0 R
-31 0 V
-4413 83 R
31 0 V
4413 0 R
-31 0 V
-4413 68 R
31 0 V
4413 0 R
-31 0 V
-4413 57 R
31 0 V
4413 0 R
-31 0 V
-4413 49 R
31 0 V
4413 0 R
-31 0 V
-4413 44 R
31 0 V
4413 0 R
-31 0 V
-4413 39 R
63 0 V
4381 0 R
-63 0 V
stroke
1022 1302 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0001)]
] -46.7 MRshow
1.000 UL
LTb
1106 1559 M
31 0 V
4413 0 R
-31 0 V
1106 1709 M
31 0 V
4413 0 R
-31 0 V
1106 1816 M
31 0 V
4413 0 R
-31 0 V
-4413 83 R
31 0 V
4413 0 R
-31 0 V
-4413 68 R
31 0 V
4413 0 R
-31 0 V
-4413 57 R
31 0 V
4413 0 R
-31 0 V
-4413 49 R
31 0 V
4413 0 R
-31 0 V
-4413 44 R
31 0 V
4413 0 R
-31 0 V
-4413 39 R
63 0 V
4381 0 R
-63 0 V
stroke
1022 2156 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
1.000 UL
LTb
1106 2413 M
31 0 V
4413 0 R
-31 0 V
1106 2563 M
31 0 V
4413 0 R
-31 0 V
1106 2670 M
31 0 V
4413 0 R
-31 0 V
-4413 83 R
31 0 V
4413 0 R
-31 0 V
-4413 68 R
31 0 V
4413 0 R
-31 0 V
-4413 57 R
31 0 V
4413 0 R
-31 0 V
-4413 49 R
31 0 V
4413 0 R
-31 0 V
-4413 44 R
31 0 V
4413 0 R
-31 0 V
-4413 39 R
63 0 V
4381 0 R
-63 0 V
stroke
1022 3010 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
1.000 UL
LTb
1106 3267 M
31 0 V
4413 0 R
-31 0 V
1106 3417 M
31 0 V
4413 0 R
-31 0 V
1106 3524 M
31 0 V
4413 0 R
-31 0 V
-4413 83 R
31 0 V
4413 0 R
-31 0 V
-4413 68 R
31 0 V
4413 0 R
-31 0 V
-4413 57 R
31 0 V
4413 0 R
-31 0 V
-4413 49 R
31 0 V
4413 0 R
-31 0 V
-4413 44 R
31 0 V
4413 0 R
-31 0 V
-4413 39 R
63 0 V
4381 0 R
-63 0 V
stroke
1022 3864 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
1106 448 M
0 63 V
0 3353 R
0 -63 V
stroke
1106 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MCshow
1.000 UL
LTb
1662 448 M
0 63 V
0 3353 R
0 -63 V
stroke
1662 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MCshow
1.000 UL
LTb
2217 448 M
0 63 V
0 3353 R
0 -63 V
stroke
2217 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6)]
] -46.7 MCshow
1.000 UL
LTb
2773 448 M
0 63 V
0 3353 R
0 -63 V
stroke
2773 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 7)]
] -46.7 MCshow
1.000 UL
LTb
3328 448 M
0 63 V
0 3353 R
0 -63 V
stroke
3328 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8)]
] -46.7 MCshow
1.000 UL
LTb
3884 448 M
0 63 V
0 3353 R
0 -63 V
stroke
3884 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 9)]
] -46.7 MCshow
1.000 UL
LTb
4439 448 M
0 63 V
0 3353 R
0 -63 V
stroke
4439 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
4995 448 M
0 63 V
0 3353 R
0 -63 V
stroke
4995 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 11)]
] -46.7 MCshow
1.000 UL
LTb
5550 448 M
0 63 V
0 3353 R
0 -63 V
stroke
5550 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 12)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1106 3864 N
0 -3416 V
4444 0 V
0 3416 V
-4444 0 V
Z stroke
LCb setrgbcolor
280 2156 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Enrichment)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3328 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Path weight)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
2330 536 Pls
1721 1013 Pls
1791 1013 Pls
2332 1013 Pls
2376 1013 Pls
2549 1013 Pls
2615 1013 Pls
3073 1013 Pls
1913 1185 Pls
2072 1185 Pls
2142 1185 Pls
2318 1185 Pls
2414 1185 Pls
2426 1185 Pls
2552 1185 Pls
2557 1185 Pls
2578 1185 Pls
2683 1185 Pls
2705 1185 Pls
2797 1185 Pls
3424 1185 Pls
2557 1289 Pls
1583 1464 Pls
1593 1464 Pls
1680 1464 Pls
1833 1464 Pls
1913 1464 Pls
1947 1464 Pls
1947 1464 Pls
1964 1464 Pls
1974 1464 Pls
1997 1464 Pls
2017 1464 Pls
2034 1464 Pls
2557 1464 Pls
2557 1464 Pls
2727 1464 Pls
2727 1464 Pls
2841 1464 Pls
2841 1464 Pls
3299 1464 Pls
2684 1675 Pls
2842 1675 Pls
3035 1675 Pls
3671 1675 Pls
3650 1684 Pls
2017 1929 Pls
2774 1929 Pls
2910 1929 Pls
3046 1929 Pls
3191 1929 Pls
3272 1929 Pls
2143 2282 Pls
2364 2282 Pls
2364 2282 Pls
3320 2282 Pls
3963 2282 Pls
1903 2383 Pls
1947 2383 Pls
4542 2546 Pls
1732 2546 Pls
1952 2546 Pls
1966 2546 Pls
2072 2546 Pls
2099 2546 Pls
2336 2546 Pls
2378 2546 Pls
2456 2546 Pls
2494 2546 Pls
2557 2546 Pls
2615 2546 Pls
2637 2546 Pls
2683 2546 Pls
2730 2546 Pls
2844 2546 Pls
3023 2546 Pls
3025 2546 Pls
3258 2546 Pls
3258 2546 Pls
3354 2546 Pls
3484 2546 Pls
3484 2546 Pls
3484 2546 Pls
3609 2546 Pls
3650 2546 Pls
2369 2635 Pls
2427 2635 Pls
2500 2635 Pls
2500 2635 Pls
2649 2635 Pls
2764 2635 Pls
2906 2635 Pls
2933 2635 Pls
2956 2635 Pls
2956 2635 Pls
2973 2635 Pls
3283 2635 Pls
2771 2792 Pls
2797 2792 Pls
2888 2792 Pls
2928 2792 Pls
2938 2792 Pls
2945 2792 Pls
2990 2792 Pls
2994 2792 Pls
2996 2792 Pls
3023 2792 Pls
3115 2792 Pls
3122 2792 Pls
3171 2792 Pls
3211 2792 Pls
3272 2792 Pls
3296 2792 Pls
3296 2792 Pls
3310 2792 Pls
3440 2792 Pls
3546 2792 Pls
3547 2792 Pls
3560 2792 Pls
3661 2792 Pls
3661 2792 Pls
3723 2792 Pls
3756 2792 Pls
3810 2792 Pls
3911 2792 Pls
1929 2822 Pls
2015 2822 Pls
2095 2822 Pls
2119 2822 Pls
2226 2822 Pls
2254 2822 Pls
2361 2822 Pls
2369 2822 Pls
2550 2822 Pls
3035 2822 Pls
1870 2894 Pls
1893 2894 Pls
2114 2894 Pls
2114 2894 Pls
2325 2894 Pls
2547 2894 Pls
2556 2894 Pls
2795 2894 Pls
2810 2894 Pls
3019 2894 Pls
3019 2894 Pls
3144 2894 Pls
3144 2894 Pls
3258 2894 Pls
2426 2959 Pls
2580 2959 Pls
2767 2959 Pls
3031 2959 Pls
3536 2959 Pls
3650 2959 Pls
3650 2959 Pls
3650 2959 Pls
4501 3005 Pls
4855 3005 Pls
2236 3005 Pls
2236 3005 Pls
2590 3005 Pls
2590 3005 Pls
2844 3019 Pls
2320 3070 Pls
2631 3070 Pls
2783 3070 Pls
2990 3070 Pls
3059 3070 Pls
3087 3070 Pls
3097 3070 Pls
3163 3070 Pls
3171 3070 Pls
3200 3070 Pls
3536 3070 Pls
3963 3070 Pls
4855 3172 Pls
2095 3172 Pls
2119 3172 Pls
2340 3172 Pls
2340 3172 Pls
2437 3172 Pls
2438 3172 Pls
2550 3172 Pls
2590 3172 Pls
2608 3172 Pls
2660 3172 Pls
2660 3172 Pls
2830 3172 Pls
2904 3172 Pls
3021 3172 Pls
3069 3172 Pls
3200 3172 Pls
3244 3172 Pls
3244 3172 Pls
3296 3172 Pls
3369 3172 Pls
3369 3172 Pls
3417 3172 Pls
3484 3172 Pls
3484 3172 Pls
3484 3172 Pls
3484 3172 Pls
3536 3172 Pls
3650 3172 Pls
3722 3172 Pls
3722 3172 Pls
3723 3172 Pls
3786 3172 Pls
4154 3172 Pls
2556 3263 Pls
2556 3263 Pls
3192 3263 Pls
3252 3263 Pls
3296 3263 Pls
3536 3263 Pls
4178 3263 Pls
4178 3263 Pls
2085 3429 Pls
2176 3429 Pls
2221 3429 Pls
2244 3429 Pls
2306 3429 Pls
2306 3429 Pls
2307 3429 Pls
2307 3429 Pls
2465 3429 Pls
2465 3429 Pls
2619 3429 Pls
2907 3429 Pls
3012 3429 Pls
3195 3429 Pls
3195 3429 Pls
3214 3429 Pls
3221 3429 Pls
3221 3429 Pls
3262 3429 Pls
3369 3429 Pls
3502 3429 Pls
3849 3429 Pls
3275 3431 Pls
2415 3483 Pls
2546 3483 Pls
2773 3483 Pls
2899 3483 Pls
3146 3483 Pls
3440 3483 Pls
3454 3483 Pls
1906 3689 Pls
2127 3689 Pls
2340 3689 Pls
2340 3689 Pls
2367 3689 Pls
2476 3689 Pls
2513 3689 Pls
2590 3689 Pls
2594 3689 Pls
2715 3689 Pls
2786 3689 Pls
2786 3689 Pls
2830 3689 Pls
2942 3689 Pls
3007 3689 Pls
3007 3689 Pls
3007 3689 Pls
3056 3689 Pls
3192 3689 Pls
3244 3689 Pls
2556 3712 Pls
2715 3712 Pls
3234 3712 Pls
3348 3712 Pls
5378 3775 Pls
5378 3775 Pls
1937 3775 Pls
2401 3792 Pls
2401 3792 Pls
2476 3792 Pls
2476 3792 Pls
2532 3792 Pls
2546 3792 Pls
2546 3792 Pls
2607 3792 Pls
2607 3792 Pls
2617 3792 Pls
2846 3792 Pls
2846 3792 Pls
2961 3792 Pls
3086 3792 Pls
3086 3792 Pls
3369 3792 Pls
3440 3792 Pls
2594 3807 Pls
2742 3807 Pls
2742 3807 Pls
3997 3807 Pls
1.000 UL
LTb
1106 3864 N
0 -3416 V
4444 0 V
0 3416 V
-4444 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
